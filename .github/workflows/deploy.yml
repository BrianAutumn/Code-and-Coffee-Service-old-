name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Get current time
        uses: srfrnk/current-time@master
        id: time
        with:
          format: LLLL
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Get dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: "##"
          tokenSuffix: "##"
          files: '["**/*.js","**/**/*.js","**/*.json","**/**/*.json","**/*.ts","**/**/*.ts"]'
        env:
          BUILD_NUMBER: ${{ github.run_number }}
          BUILD_DATE: ${{ steps.time.outputs.formattedTime }}
          SHA: ${{ github.sha }}
          REF: ${{ github.ref }}
      - name: Copy node_modules to package
        run: cp -r node_modules lambda-package/node_modules
      - name: Zip lambda package
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ${{ github.sha }}.zip lambda-package/*
      - name: Execute CloudFormation deployment infrastructure template
        run: aws cloudformation deploy --template-file deploy.template.yaml --stack-name code-and-coffee-service-deploy --parameter-overrides RandomSeed=${{ secrets.RANDOM_SEED }}
      - name: Upload lambda package to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://code-and-coffee-service-deploy-${{ secrets.RANDOM_SEED }}/${{ github.sha }}.zip
      - name: Execute CloudFormation runtime infrastructure template
        run: aws cloudformation deploy --template-file runtime.template.yaml --stack-name code-and-coffee-service --parameter-overrides LambdaKey=${{ github.sha }}.zip AcmCertificateArn=${{ secrets.ACM_CERTIFICATE_ARN }} RandomSeed=${{ secrets.RANDOM_SEED }} LambdaRoleArn=${{ secrets.LAMBDA_ROLE_ARN }}
      - name: Upload dist to web resources bucket
        run: aws s3 sync dist s3://code-and-coffee-service-web-resources-${{ secrets.RANDOM_SEED }}
      - name: Publish SNS topic success
        if: ${{ success() }}
        uses: nothingalike/sns-publish-topic@v1.6
        with:
          MESSAGE: "${{ github.repository }} '${{ github.workflow }}.${{ github.run_number }}' successful"
          TOPIC_ARN: ${{ secrets.SNS_ARN }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Publish SNS topic failure
        if: ${{ !success() }}
        uses: nothingalike/sns-publish-topic@v1.6
        with:
          MESSAGE: "${{ github.repository }} '${{ github.workflow }}.${{ github.run_number }}' failure"
          TOPIC_ARN: ${{ secrets.SNS_ARN }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
